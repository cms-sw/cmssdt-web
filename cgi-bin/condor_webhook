#!/usr/bin/env python
from __future__ import print_function
from json import loads, dumps
from sys import exit, stdin
from jenkins_callback import build_jobs

print ("Content-Type: text/html\n")
BASE_DIRECTORY = '/data'

#check signature function
def check_signature(payload):
  from commands import getstatusoutput as run_cmd
  from hashlib import sha256
  e, token = run_cmd("sha256sum %s/secrets/github_hook_secret | sed 's| .*||'" % BASE_DIRECTORY)
  if e: return False
  return payload['signature']==sha256(payload['condor_job_id']+':'+payload['work_dir']+' '+token).hexdigest()

#check source ip in white list fucntion
def check_ip():
  return True

try:
  payload = loads(stdin.read())
except Exception as e:
  print ("Invalid data, can not read json input")
  exit()

if not check_ip():
  print ("Invalid IP")
  exit()

if 'schedd_name' not in payload: payload['schedd_name'] = "bigbird15.cern.ch"
xparam = []
for k in ['work_dir', 'condor_job_id', 'labels', 'status', 'schedd_name']:
  if k not in payload:
    print ("Invalid data: Missing key %s" % k)
    exit()
  xparam.append({"name":k.upper(),  "value":payload[k]})

for k in ['signature', 'jenkins_url']:
  if k in payload: continue
  print ("Invalid data: Missing key %s" % k)
  exit()

if not check_signature(payload):
  print ("Invalid or wrong signatures")
  exit()

build_jobs(payload['jenkins_url'], [(dumps({"parameter":xparam}),"grid-webhook")])
