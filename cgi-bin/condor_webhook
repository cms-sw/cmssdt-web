#!/usr/bin/env python
print "Content-Type: text/html\n"

from json import loads, dumps
from sys import exit, stdin
import cgi
from _py2with3compatibility import Request, urlopen, urlencode, build_opener, install_opener, CookieJar, HTTPCookieProcessor, HTTPError

BASE_DIRECTORY = '/data'

#check signature function
def check_signature(payload):
  from commands import getstatusoutput as run_cmd
  from hashlib import sha256
  e, token = run_cmd("sha256sum %s/secrets/github_hook_secret | sed 's| .*||'" % BASE_DIRECTORY)
  if e: return False
  return payload['signature']==sha256(payload['condor_job_id']+':'+payload['work_dir']+' '+token).hexdigest()

#check source ip in white list fucntion
def check_ip():
  return True

try:
  payload = loads(stdin.read())
except Exception as e:
  print "Invalid data, can not read json input"
  exit()

if not check_ip():
  print "Invalid IP"
  exit()

if 'schedd_name' not in payload: payload['schedd_name'] = "bigbird15.cern.ch"
xparam = []
for k in ['work_dir', 'condor_job_id', 'labels', 'status', 'schedd_name']:
  if k not in payload:
    print "Invalid data: Missing key %s" % k
    exit()
  xparam.append({"name":k.upper(),  "value":payload[k]})

for k in ['signature', 'jenkins_url']:
  if k in payload: continue
  print "Invalid data: Missing key %s" % k
  exit()

if not check_signature(payload):
  print "Invalid or wrong signatures"
  exit()

#trigger jenkins job
install_opener(build_opener(HTTPCookieProcessor(CookieJar())))
for x in [(dumps({"parameter":xparam}),"grid-webhook")]:
  jenkins_parameters, job = x
  if not job: continue
  headers = {"ADFS_LOGIN" : "cmssdt"}
  try:
    req = Request(url=payload['jenkins_url']+'/crumbIssuer/api/json', headers=headers)
    crumb = json.loads(urlopen(req).read())
    headers[crumb['crumbRequestField']] = crumb['crumb']
    print ("OK crumbRequest")
  except HTTPError as e:
    print ("Running without Crumb Issuer:%s " % e)
    pass
  print "Triggering Jenkins Job: ",x
  url = payload['jenkins_url']+'/job/'+ job + '/build'
  print jenkins_parameters,job
  data = {
              "json": jenkins_parameters,
              "Submit": "Build"
         }
  try:
    data = urlencode(data)
    req = Request(url=url,data=data,headers=headers)
    content = urlopen(req).read()
  except Exception as e:
    print ("Unable to start jenkins job: %s" % e)
